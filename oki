```py
import discord
from discord.ext import commands
from discord.commands import slash_command

import aiosqlite
import random
from easy_pil import Editor, Font, load_image_async

class LevelSystem(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.DB = "Kiwi level.db"

    @staticmethod
    def get_level(xp):
        lvl = 1
        amount = 100

        while True:
            xp -= amount
            if xp < 0:
                return lvl
            lvl += 1
            amount += 100

    @commands.Cog.listener()
    async def on_ready(self):
        async with aiosqlite.connect(self.DB) as db:
            await db.execute(
                """
                CREATE TABLE IF NOT EXISTS users (
                user_id INTEGER PRIMARY KEY,
                msg_count INTEGER DEFAULT 0,
                xp INTEGER DEFAULT 0
                )"""
            )

    async def check_user(self, user_id):
        async with aiosqlite.connect(self.DB) as db:
            await db.execute("INSERT OR IGNORE INTO users (user_id) VALUES (?)", (user_id,))
            await db.commit()

    async def get_xp(self, user_id):
        await self.check_user(user_id)
        async with aiosqlite.connect(self.DB) as db:
            async with db.execute("SELECT xp FROM users WHERE user_id = ?", (user_id,)) as cursor:
                result = await cursor.fetchone()

        return result[0]

    @commands.Cog.listener()
    async def on_message(self, message):
        if message.author.bot:
            return
        if not message.guild:
            return
        xp = random.randint(10, 20)

        await self.check_user(message.author.id)
        async with aiosqlite.connect(self.DB) as db:
            await db.execute(
                "UPDATE users SET msg_count = msg_count + 1, xp = xp + ? WHERE user_id = ?", (xp, message.author.id)
            )
            await db.commit()

        # check level up
        new_xp = await self.get_xp(message.author.id)

        old_level = self.get_level(new_xp - xp)
        new_level = self.get_level(new_xp)

        if old_level == new_level:
            return

        if new_level == 2:
            role = message.guild.get_role(1120003735616225341)  # hier role level 2 ID einfügen
            await message.author.add_roles(role)
            await message.channel.send(f"Level Up! Du hast die Rolle {role.mention} erhalten!")




            # check level up
        new_xp = await self.get_xp(message.author.id)

        old_level = self.get_level(new_xp - xp)
        new_level = self.get_level(new_xp)

        if old_level == new_level:
            return

        if new_level == 5:
            role = message.guild.get_role(1120004055415136347)  # hier role level 5 ID einfügen
            await message.author.add_roles(role)
            await message.channel.send(f"Level Up! Du hast die Rolle {role.mention} erhalten!")


            # check level up
        new_xp = await self.get_xp(message.author.id)

        old_level = self.get_level(new_xp - xp)
        new_level = self.get_level(new_xp)

        if old_level == new_level:
            return

        if new_level == 10:
            role = message.guild.get_role(1120004148901982309)  # hier role level 10 ID einfügen
            await message.author.add_roles(role)
            await message.channel.send(f"Level Up! Du hast die Rolle {role.mention} erhalten!")


            # check level up
        new_xp = await self.get_xp(message.author.id)

        old_level = self.get_level(new_xp - xp)
        new_level = self.get_level(new_xp)

        if old_level == new_level:
            return

        if new_level == 15:
            role = message.guild.get_role(1120004218594541658)  # hier role level 15 ID einfügen 
            await message.author.add_roles(role)
            await message.channel.send(f"Level Up! Du hast die Rolle {role.mention} erhalten!")
            


            # check level up
        new_xp = await self.get_xp(message.author.id)

        old_level = self.get_level(new_xp - xp)
        new_level = self.get_level(new_xp)

        if old_level == new_level:
            return

        if new_level == 20:
            role = message.guild.get_role(1120004821295038607)  # hier  level role 20 ID einfügen
            await message.author.add_roles(role)
            await message.channel.send(f"Level Up! Du hast die Rolle {role.mention} erhalten!")


            # check level up
        new_xp = await self.get_xp(message.author.id)

        old_level = self.get_level(new_xp - xp)
        new_level = self.get_level(new_xp)

        if old_level == new_level:
            return

        if new_level == 25:
            role = message.guild.get_role(1120004499382206564)  # hier role level 25 ID einfügen 
            await message.author.add_roles(role)
            await message.channel.send(f"Level Up! Du hast die Rolle {role.mention} erhalten!")


            # check level up
        new_xp = await self.get_xp(message.author.id)

        old_level = self.get_level(new_xp - xp)
        new_level = self.get_level(new_xp)

        if old_level == new_level:
            return

        if new_level == 30:
            role = message.guild.get_role(1120004821295038607)  # hier role level 30 ID einfügen
            await message.author.add_roles(role)
            await message.channel.send(f"Level Up! Du hast die Rolle {role.mention} erhalten!")


            # check level up
        new_xp = await self.get_xp(message.author.id)

        old_level = self.get_level(new_xp - xp)
        new_level = self.get_level(new_xp)

        if old_level == new_level:
            return

        if new_level == 35:
            role = message.guild.get_role(1120004885463711814)  # hier level role 35 ID einfügen
            await message.author.add_roles(role)
            await message.channel.send(f"Level Up! Du hast die Rolle {role.mention} erhalten!")



            # check level up
        new_xp = await self.get_xp(message.author.id)

        old_level = self.get_level(new_xp - xp)
        new_level = self.get_level(new_xp)

        if old_level == new_level:
            return

        if new_level == 100:
            role = message.guild.get_role(1120004955546320967)  # hier level role 100 ID einfügen
            await message.author.add_roles(role)
            await message.channel.send(f"Level Up! Du hast die Rolle {role.mention} erhalten!")

    @slash_command()
    async def rank(self, ctx):
        background = Editor("Name deiner Datei").resize((800, 250))
        xp = await self.get_xp(ctx.author.id)
        lvl = self.get_level(xp)
        avatar = await load_image_async(ctx.author.display_avatar.url)
        circle_avatar = Editor(avatar).resize((200, 200)).circle_image()
        background.paste(circle_avatar, (25, 25))

        big_text = Font.poppins(size=50, variant="bold")
        small_text = Font.poppins(size=30, variant="regular")
        background.text((370, 150),f"XP:{xp}", color="white", font=big_text)
        background.text((370, 100),f"Level:{lvl}", color="white", font=big_text)
        background.text((310, 55), f"{ctx.author}", color="white", font=big_text)
        file = discord.File(fp=background.image_bytes, filename='rank.png')
        return await ctx.respond(file=file)
def setup(bot):
    bot.add_cog(LevelSystem(bot))```
